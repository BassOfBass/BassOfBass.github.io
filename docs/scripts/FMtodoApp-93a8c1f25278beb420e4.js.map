{"version":3,"sources":["webpack://landing-page/./src/frontend-mentor/todo-app/todo-app.js","webpack://landing-page/./src/lib/_index.js"],"names":["TodoTask","task","this","id","nanoidHTML","isCompleted","isRemoved","dateCreated","Date","toISOString","dateCompleted","dateRemoved","globalTheme","document","querySelector","header","main","theme","addEventListener","event","classList","toggle","initHeader","newTodoForm","todoList","preventDefault","todoTask","li","p","buttonRemove","buttonCheck","input","target","elements","listItem","value","createElement","add","type","textContent","appendChild","iconCheck","initMain","nanoid"],"mappings":"wIAIMA,EAIJ,WAAYC,IAAM,eAChBC,KAAKD,KAAOA,EACZC,KAAKC,IAAKC,SACVF,KAAKG,aAAc,EACnBH,KAAKI,WAAY,EACjBJ,KAAKK,aAAc,IAAIC,MAAOC,cAC9BP,KAAKQ,cAAgB,KACrBR,KAAKS,YAAc,MAIjBC,EAAcC,SAASC,cAAc,WACrCC,EAASF,SAASC,cAAc,YAChCE,EAAOH,SAASC,cAAc,SASpC,SAAoBC,EAAQE,GAINF,EAAOD,cAAc,qBAE7BI,iBAAiB,SAE7B,SAA2BC,GACzBF,EAAMG,UAAUC,OAAO,WAhB3BC,CAAWP,EAAQH,GAuBnB,SAAkBI,GAIhB,IAAMO,EAAcP,EAAKF,cAAc,aACjCU,EAAWR,EAAKF,cAAc,cAEpCS,EAAYL,iBAAiB,UAK7B,SAAoBC,GAClBA,EAAMM,iBAKN,IAgB0BC,EACpBC,EACAC,EACAC,EACAC,EAhBAC,EAJOZ,EAAMa,OAIAC,SAAS,aAEtBC,GAUoBR,EAXT,IAAI1B,EAAS+B,EAAMI,OAY9BR,EAAKd,SAASuB,cAAc,MAC5BR,EAAIf,SAASuB,cAAc,KAC3BP,EAAehB,SAASuB,cAAc,UACtCN,EAAcjB,SAASuB,cAAc,UAE3CT,EAAGP,UAAUiB,IAAI,aACjBT,EAAER,UAAUiB,IAAI,aAChBR,EAAaT,UAAUiB,IAAI,eAC3BP,EAAYV,UAAUiB,IAAI,cAC1BR,EAAaS,KAAO,SACpBR,EAAYQ,KAAO,SACnBX,EAAGxB,GAAKuB,EAASvB,GACjByB,EAAEW,YAAcb,EAASzB,KACzB4B,EAAaU,YAAc,IAE3BT,EAAYU,YAAYC,GACxBd,EAAGa,YAAYV,GACfH,EAAGa,YAAYZ,GACfD,EAAGa,YAAYX,GAERF,GA7BPH,EAASgB,YAAYN,GACrBH,EAAMI,MAAQ,MAjDlBO,CAAS1B,I,wDCVF,SAASZ,IACd,kBAAWuC,a","file":"scripts/FMtodoApp-93a8c1f25278beb420e4.js","sourcesContent":["import \"./styles/main.scss\";\r\nimport iconCheck from \"./assets/icon-check.svg\";\r\nimport { nanoidHTML } from \"@wp/lib/_index\";\r\n\r\nclass TodoTask {\r\n  /**\r\n   * @param {string} task\r\n   */\r\n  constructor(task) {\r\n    this.task = task;\r\n    this.id = nanoidHTML();\r\n    this.isCompleted = false;\r\n    this.isRemoved = false;\r\n    this.dateCreated = new Date().toISOString();\r\n    this.dateCompleted = null;\r\n    this.dateRemoved = null;\r\n  }\r\n}\r\n\r\nconst globalTheme = document.querySelector(\".gtheme\");\r\nconst header = document.querySelector(\".gheader\");\r\nconst main = document.querySelector(\"main\");\r\n\r\ninitHeader(header, globalTheme);\r\ninitMain(main);\r\n\r\n/**\r\n * @param {HTMLElement} header \r\n * @param {HTMLElement} theme \r\n */\r\nfunction initHeader(header, theme) {\r\n  /**\r\n   * @type {HTMLButtonElement}\r\n   */\r\n  const themeButton = header.querySelector(\".gswitch > button\");\r\n\r\n  themeButton.addEventListener(\"click\", handleThemeChange);\r\n\r\n  function handleThemeChange(event) {\r\n    theme.classList.toggle(\"dark\");\r\n  }\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} main \r\n */\r\nfunction initMain(main) {\r\n  /**\r\n   * @type HTMLFormElement\r\n   */\r\n  const newTodoForm = main.querySelector(\".new-todo\");\r\n  const todoList = main.querySelector(\".todo-list\")\r\n\r\n  newTodoForm.addEventListener(\"submit\", addNewTodo);\r\n\r\n  /**\r\n   * @param {Event} event \r\n   */\r\n  function addNewTodo(event) {\r\n    event.preventDefault();\r\n\r\n    /**\r\n     * @type HTMLFormElement\r\n     */\r\n    const form = event.target;\r\n    /**\r\n     * @type HTMLInputElement\r\n     */\r\n    const input = form.elements[\"todo-task\"];\r\n    const todoTask = new TodoTask(input.value);\r\n    const listItem = createTodoListItem(todoTask);\r\n\r\n    todoList.appendChild(listItem);\r\n    input.value = \"\";\r\n  }\r\n\r\n  /**\r\n   * @param {TodoTask} todoTask \r\n   * @returns {HTMLLIElement}\r\n   */\r\n  function createTodoListItem(todoTask) {\r\n    const li = document.createElement(\"li\");\r\n    const p = document.createElement(\"p\");\r\n    const buttonRemove = document.createElement(\"button\");\r\n    const buttonCheck = document.createElement(\"button\");\r\n    \r\n    li.classList.add(\"todo-item\");\r\n    p.classList.add(\"todo-task\");\r\n    buttonRemove.classList.add(\"todo-remove\");\r\n    buttonCheck.classList.add(\"todo-check\");\r\n    buttonRemove.type = \"button\";\r\n    buttonCheck.type = \"button\";\r\n    li.id = todoTask.id;\r\n    p.textContent = todoTask.task;\r\n    buttonRemove.textContent = \"â€•\";\r\n\r\n    buttonCheck.appendChild(iconCheck);\r\n    li.appendChild(buttonCheck);\r\n    li.appendChild(p);\r\n    li.appendChild(buttonRemove);\r\n\r\n    return li;\r\n  }\r\n}","import { nanoid } from \"nanoid\";\r\n\r\n/**\r\n * @param {number} ms \r\n * @returns {Promise<true>}\r\n */\r\nexport function asyncTimeout(ms) {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve(true);\r\n    }, ms);\r\n  });\r\n};\r\n\r\nexport function nanoidHTML() {\r\n  return `u${nanoid()}`;\r\n}"],"sourceRoot":""}